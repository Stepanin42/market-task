services:

  storage-service:
    build:
      context: ./storage-service
      dockerfile: Dockerfile
    ports:
      - "9091:9091"
    environment:
      QUARKUS_PROFILE: prod
      QUARKUS_SWAGGER_UI_ENABLE: true
      QUARKUS_SWAGGER_UI_ALWAYS_INCLUDE: true
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://storage-db:5432/storage
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: root
    depends_on:
      storage-db:
        condition: service_healthy
    networks:
      - app-network

  storage-db:
    image: postgres:13
    environment:
      POSTGRES_DB: storage
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - storage-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "9092:9092"
    environment:
      QUARKUS_PROFILE: prod
      QUARKUS_SWAGGER_UI_ENABLE: true
      QUARKUS_SWAGGER_UI_ALWAYS_INCLUDE: true
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://order-db:5432/orderdb
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: root
    depends_on:
      order-db:
        condition: service_healthy
    networks:
      - app-network

  order-db:
    image: postgres:13
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - order-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  storage-data:
  order-data:

networks:
  app-network:
    driver: bridge
